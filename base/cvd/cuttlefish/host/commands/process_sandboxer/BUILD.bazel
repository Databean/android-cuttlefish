load("//:build_variables.bzl", "COPTS")
load("//tools/lint:linters.bzl", "clang_tidy_test")

package(
    default_visibility = ["//:android_cuttlefish"],
)

cc_library(
    name = "credentialed_unix_server",
    srcs = ["credentialed_unix_server.cpp"],
    hdrs = ["credentialed_unix_server.h"],
    copts = COPTS,
    strip_include_prefix = "//cuttlefish",
    deps = [
        "@abseil-cpp//absl/status",
        "@abseil-cpp//absl/status:statusor",
        "@sandboxed_api//sandboxed_api/util:fileops",
    ],
)

clang_tidy_test(
    name = "credentialed_unix_server_clang_tidy",
    srcs = [":credentialed_unix_server"],
    tags = ["clang_tidy", "clang-tidy"],
)

cc_library(
    name = "logs",
    srcs = ["logs.cpp"],
    hdrs = ["logs.h"],
    copts = COPTS,
    strip_include_prefix = "//cuttlefish",
    deps = [
        "@abseil-cpp//absl/log",
        "@abseil-cpp//absl/log:log_entry",
        "@abseil-cpp//absl/log:log_sink",
        "@abseil-cpp//absl/log:log_sink_registry",
        "@abseil-cpp//absl/status",
        "@abseil-cpp//absl/status:statusor",
    ],
)

clang_tidy_test(
    name = "logs_clang_tidy",
    srcs = [":logs"],
    tags = ["clang_tidy", "clang-tidy"],
)

cc_library(
    name = "signal_fd",
    srcs = ["signal_fd.cpp"],
    hdrs = ["signal_fd.h"],
    copts = COPTS,
    strip_include_prefix = "//cuttlefish",
    deps = [
        "@abseil-cpp//absl/status",
        "@abseil-cpp//absl/status:statusor",
        "@abseil-cpp//absl/strings",
        "@sandboxed_api//sandboxed_api/util:fileops",
    ],
)

clang_tidy_test(
    name = "signal_fd_clang_tidy",
    srcs = [":signal_fd"],
    tags = ["clang_tidy", "clang-tidy"],
)
